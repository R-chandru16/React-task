{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Coding Master Project\\\\React Coding Master Website\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as MdIcons from \"react-icons/md\";\nimport { SidebarData } from \"./SidebarData\";\nimport { IconContext } from \"react-icons\";\nimport { NavLink, Routes, Route } from 'react-router-dom';\nimport \"./Navbar.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => {\n    setSidebar(!sidebar);\n  };\n\n  const [open, setOpen] = useState(false);\n  let menuRef = useRef();\n  useEffect(() => {\n    let handler = e => {\n      if (!menuRef.current.contains(e.target)) {\n        setOpen(false);\n        console.log(menuRef.current);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handler);\n    const loginTime = localStorage.getItem(\"loginTime\") ? new Date(localStorage.getItem(\"loginTime\")) : new Date(); // Update the login time in the header\n\n    const loginTimeDiv = document.getElementById(\"login-time\");\n    loginTimeDiv.innerHTML += loginTime.toLocaleString(); // Update the timer every second\n\n    const timerDiv = document.getElementById(\"timer\");\n    const interval = setInterval(() => {\n      const elapsed = Date.now() - loginTime.getTime();\n      const hours = Math.floor(elapsed / (1000 * 60 * 60));\n      const minutes = Math.floor(elapsed % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(elapsed % (1000 * 60) / 1000);\n      timerDiv.innerHTML = `Time elapsed: ${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    }, 1000); // Store the login time in local storage\n\n    localStorage.setItem(\"loginTime\", loginTime);\n    return () => {\n      clearInterval(interval);\n      document.removeEventListener(\"mousedown\", handler);\n    };\n  }, []);\n\n  const handleLogout = () => {\n    window.location = '/login'; // any other logout logic here\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Navbar, \"cD98d44Wxj3Q3YxM81jnLWb3IE8=\");\n\n_c = Navbar;\n\nfunction DropdownItem(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"dropdownItem\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\" \", props.text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = DropdownItem;\nexport default Navbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"DropdownItem\");","map":{"version":3,"sources":["D:/React Coding Master Project/React Coding Master Website/src/components/Navbar.js"],"names":["Link","FaIcons","MdIcons","SidebarData","IconContext","NavLink","Routes","Route","React","useState","useEffect","useRef","Navbar","sidebar","setSidebar","showSidebar","open","setOpen","menuRef","handler","e","current","contains","target","console","log","document","addEventListener","loginTime","localStorage","getItem","Date","loginTimeDiv","getElementById","innerHTML","toLocaleString","timerDiv","interval","setInterval","elapsed","now","getTime","hours","Math","floor","minutes","seconds","toString","padStart","setItem","clearInterval","removeEventListener","handleLogout","window","location","DropdownItem","props","text"],"mappings":";;;AACA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,KAA1B,QAAuC,kBAAvC;AAGA,OAAO,cAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAGA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAGA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AAEA,MAAIS,OAAO,GAAGP,MAAM,EAApB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAO,GAAIC,CAAD,IAAO;AACnB,UAAI,CAACF,OAAO,CAACG,OAAR,CAAgBC,QAAhB,CAAyBF,CAAC,CAACG,MAA3B,CAAL,EAAyC;AACvCN,QAAAA,OAAO,CAAC,KAAD,CAAP;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACG,OAApB;AACD;AACF,KALD;;AAOAK,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,OAAvC;AAEA,UAAMS,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACd,IAAIC,IAAJ,CAASF,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAT,CADc,GAEd,IAAIC,IAAJ,EAFJ,CAVc,CAcd;;AACA,UAAMC,YAAY,GAAGN,QAAQ,CAACO,cAAT,CAAwB,YAAxB,CAArB;AACAD,IAAAA,YAAY,CAACE,SAAb,IAA0BN,SAAS,CAACO,cAAV,EAA1B,CAhBc,CAkBd;;AACA,UAAMC,QAAQ,GAAGV,QAAQ,CAACO,cAAT,CAAwB,OAAxB,CAAjB;AACA,UAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,YAAMC,OAAO,GAAGR,IAAI,CAACS,GAAL,KAAaZ,SAAS,CAACa,OAAV,EAA7B;AACA,YAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAlB,CAAd;AACA,YAAMM,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYL,OAAO,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAR,IAAgC,OAAO,EAAvC,CAAX,CAAhB;AACA,YAAMO,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYL,OAAO,IAAI,OAAO,EAAX,CAAR,GAA0B,IAArC,CAAhB;AACAH,MAAAA,QAAQ,CAACF,SAAT,GAAsB,iBAAgBQ,KAAK,CAACK,QAAN,GAAiBC,QAAjB,CAA0B,CAA1B,EAA6B,GAA7B,CAAkC,IAAGH,OAAO,CAACE,QAAR,GAAmBC,QAAnB,CAA4B,CAA5B,EAA+B,GAA/B,CAAoC,IAAGF,OAAO,CAACC,QAAR,GAAmBC,QAAnB,CAA4B,CAA5B,EAA+B,GAA/B,CAAoC,EAAtJ;AACD,KAN2B,EAMzB,IANyB,CAA5B,CApBc,CA4Bd;;AACAnB,IAAAA,YAAY,CAACoB,OAAb,CAAqB,WAArB,EAAkCrB,SAAlC;AAEA,WAAO,MAAM;AACXsB,MAAAA,aAAa,CAACb,QAAD,CAAb;AACAX,MAAAA,QAAQ,CAACyB,mBAAT,CAA6B,WAA7B,EAA0ChC,OAA1C;AACD,KAHD;AAID,GAnCQ,EAmCN,EAnCM,CAAT;;AAqCA,QAAMiC,YAAY,GAAG,MAAM;AAEzBC,IAAAA,MAAM,CAACC,QAAP,GAAkB,QAAlB,CAFyB,CAGzB;AACD,GAJD;;AAMA,sBACE,qCADF;AAKD;;GA1DQ1C,M;;KAAAA,M;;AA4DT,SAAS2C,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE;AAAA,2BAEE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,6BAIE;AAAA,wBAAKA,KAAK,CAACC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;MAbQF,Y;AAcT,eAAe3C,MAAf","sourcesContent":["\nimport { Link } from \"react-router-dom\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as MdIcons from \"react-icons/md\";\nimport { SidebarData } from \"./SidebarData\";\nimport { IconContext } from \"react-icons\";\nimport { NavLink, Routes, Route } from 'react-router-dom';\n\n\nimport \"./Navbar.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => {\n    setSidebar(!sidebar);\n  };\n  const [open, setOpen] = useState(false);\n\n  let menuRef = useRef();\n\n  useEffect(() => {\n    let handler = (e) => {\n      if (!menuRef.current.contains(e.target)) {\n        setOpen(false);\n        console.log(menuRef.current);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handler);\n\n    const loginTime = localStorage.getItem(\"loginTime\")\n      ? new Date(localStorage.getItem(\"loginTime\"))\n      : new Date();\n\n    // Update the login time in the header\n    const loginTimeDiv = document.getElementById(\"login-time\");\n    loginTimeDiv.innerHTML += loginTime.toLocaleString();\n\n    // Update the timer every second\n    const timerDiv = document.getElementById(\"timer\");\n    const interval = setInterval(() => {\n      const elapsed = Date.now() - loginTime.getTime();\n      const hours = Math.floor(elapsed / (1000 * 60 * 60));\n      const minutes = Math.floor((elapsed % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((elapsed % (1000 * 60)) / 1000);\n      timerDiv.innerHTML = `Time elapsed: ${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    }, 1000);\n\n    // Store the login time in local storage\n    localStorage.setItem(\"loginTime\", loginTime);\n\n    return () => {\n      clearInterval(interval);\n      document.removeEventListener(\"mousedown\", handler);\n    };\n  }, []);\n\n  const handleLogout = () => {\n\n    window.location = '/login';\n    // any other logout logic here\n  }\n\n  return (\n    <>\n     \n    </>\n  );\n}\n\nfunction DropdownItem(props) {\n  return (\n    <div>\n\n      <li className='dropdownItem'>\n\n        {/* <img src={props.img}></img> */}\n\n        <a> {props.text} </a>\n\n      </li>\n    </div>\n  );\n}\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}