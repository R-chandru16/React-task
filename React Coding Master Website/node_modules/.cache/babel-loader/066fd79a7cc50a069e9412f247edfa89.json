{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Coding Master Project\\\\React Coding Master Website\\\\src\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.css'; // Define a static list of users and passwords\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst users = [{\n  username: 'user1',\n  password: 'password1'\n}, {\n  username: 'user2',\n  password: 'password2'\n}, {\n  username: 'user3',\n  password: 'password3'\n}];\nexport function Login() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  function handleLogin(event) {\n    event.preventDefault(); // Prevent the default form submission  \n    // Look for a user with the entered username and password \n\n    const user = users.find(u => u.username === username && u.password === password);\n\n    if (user) {\n      // If a user was found, log them in   \n      console.log('User logged in:', user.username);\n      setError('');\n\n      /*#__PURE__*/\n      _jsxDEV(Route, {\n        path: \"/Home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this); // Clear any previous error messages    \n\n    } else {\n      // If no user was found, display an error message     \n      console.log('Login failed');\n      setError('Invalid username or password');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login-label-text\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: event => setUsername(event.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login-label-text\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/React Coding Master Project/React Coding Master Website/src/Login/Login.js"],"names":["React","useState","users","username","password","Login","setUsername","setPassword","error","setError","handleLogin","event","preventDefault","user","find","u","console","log","target","value"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './Login.css'\r\n// Define a static list of users and passwords\r\nconst users = [\r\n    { username: 'user1', password: 'password1' },\r\n    { username: 'user2', password: 'password2' },\r\n    { username: 'user3', password: 'password3' },\r\n];\r\nexport function Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    function handleLogin(event) {\r\n        event.preventDefault();\r\n        // Prevent the default form submission  \r\n        // Look for a user with the entered username and password \r\n        const user = users.find(u => u.username === username && u.password === password);\r\n        if (user) {\r\n\r\n            // If a user was found, log them in   \r\n            console.log('User logged in:', user.username);\r\n            setError('');\r\n            <Route path=\"/Home\" element={<Home />} /> // Clear any previous error messages    \r\n        } else {\r\n\r\n            // If no user was found, display an error message     \r\n            console.log('Login failed');\r\n            setError('Invalid username or password');\r\n        }\r\n    } return (\r\n        <div className=\"login-container\">\r\n            <form onSubmit={handleLogin} className=\"login-form\">\r\n\r\n                <h2 className=\"login-title\">Login</h2>\r\n                <label className=\"login-label\">\r\n                    <span className=\"login-label-text\">Username:</span>\r\n                    <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)}\r\n                        className=\"login-input\" />\r\n                </label>\r\n                <label className=\"login-label\">\r\n                    <span className=\"login-label-text\">Password:</span>\r\n                    <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)}\r\n                        className=\"login-input\" />\r\n                </label>\r\n                <button type=\"submit\" className=\"login-button\">Log In</button>\r\n                {error && <div className=\"login-error\">{error}</div>}\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}