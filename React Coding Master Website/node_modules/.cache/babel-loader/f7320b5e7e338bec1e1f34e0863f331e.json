{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Coding Master Project\\\\React Coding Master Website\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chess() {\n  _s();\n\n  const [loggedInAt, setLoggedInAt] = useState(null);\n  const [loggedInTime, setLoggedInTime] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setLoggedInTime((Date.now() - loggedInAt) / 1000);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [loggedInAt]);\n\n  const handleLogin = () => {\n    setLoggedInAt(Date.now());\n  };\n\n  const handleLogout = () => {\n    setLoggedInAt(null);\n    setLoggedInTime(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [loggedInAt ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Logged in at \", new Date(loggedInAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Logged in for \", loggedInTime.toFixed(0), \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), loggedInAt && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chess, \"8DsDgu/hLmGepIQJmRV4XUP0S/U=\");\n\n_c = Chess;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chess\");","map":{"version":3,"sources":["D:/React Coding Master Project/React Coding Master Website/src/components/Navbar.js"],"names":["React","useState","useEffect","Chess","loggedInAt","setLoggedInAt","loggedInTime","setLoggedInTime","intervalId","setInterval","Date","now","clearInterval","handleLogin","handleLogout","toLocaleString","toFixed","App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,CAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCF,MAAAA,eAAe,CAAC,CAACG,IAAI,CAACC,GAAL,KAAaP,UAAd,IAA4B,IAA7B,CAAf;AACD,KAF6B,EAE3B,IAF2B,CAA9B;AAIA,WAAO,MAAMQ,aAAa,CAACJ,UAAD,CAA1B;AACD,GANQ,EAMN,CAACJ,UAAD,CANM,CAAT;;AAQA,QAAMS,WAAW,GAAG,MAAM;AACxBR,IAAAA,aAAa,CAACK,IAAI,CAACC,GAAL,EAAD,CAAb;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAG,MAAM;AACzBT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,eAAe,CAAC,CAAD,CAAf;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,iBACGH,UAAU,gBACT;AAAA,gCACE;AAAA,sCAAiB,IAAIM,IAAJ,CAASN,UAAT,EAAqBW,cAArB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,uCAAkBT,YAAY,CAACU,OAAb,CAAqB,CAArB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADS,gBAMT;AAAQ,QAAA,OAAO,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EASGT,UAAU,iBACT;AAAQ,QAAA,OAAO,EAAEU,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAvCQX,K;;KAAAA,K;AAyCT,eAAec,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Chess() {\n  const [loggedInAt, setLoggedInAt] = useState(null);\n  const [loggedInTime, setLoggedInTime] = useState(0);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setLoggedInTime((Date.now() - loggedInAt) / 1000);\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [loggedInAt]);\n\n  const handleLogin = () => {\n    setLoggedInAt(Date.now());\n  };\n\n  const handleLogout = () => {\n    setLoggedInAt(null);\n    setLoggedInTime(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        {loggedInAt ? (\n          <>\n            <p>Logged in at {new Date(loggedInAt).toLocaleString()}</p>\n            <p>Logged in for {loggedInTime.toFixed(0)} seconds</p>\n          </>\n        ) : (\n          <button onClick={handleLogin}>Login</button>\n        )}\n        {loggedInAt && (\n          <button onClick={handleLogout}>Logout</button>\n        )}\n      </header>\n      {/* rest of the app */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}