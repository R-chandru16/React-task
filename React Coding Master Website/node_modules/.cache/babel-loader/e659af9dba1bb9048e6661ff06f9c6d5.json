{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Coding Master Project\\\\React Coding Master Website\\\\src\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.css'; // Define a static list of users and passwords\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst users = [{\n  username: 'Admin1',\n  password: 'password1'\n}, {\n  username: 'Admin2',\n  password: 'password2'\n}, {\n  username: 'Admin3',\n  password: 'password3'\n}];\nexport function Login() {\n  _s();\n\n  const name = props.name;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  function handleLogin(event) {\n    event.preventDefault(); // Prevent the default form submission  \n    // Look for a user with the entered username and password \n\n    const user = users.find(u => u.username === username && u.password === password);\n\n    if (user) {\n      props.onSubmit(user.username); // If a user was found, log them in   \n\n      console.log('User logged in:', user.username);\n      setError('');\n      window.location = '/home'; // Clear any previous error messages    \n    } else {\n      // If no user was found, display an error message     \n      console.log('Login failed');\n      setError('Invalid username or password');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login-label-text\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: event => setUsername(event.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login-label-text\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/React Coding Master Project/React Coding Master Website/src/Login/Login.js"],"names":["React","useState","users","username","password","Login","name","props","setUsername","setPassword","error","setError","handleLogin","event","preventDefault","user","find","u","onSubmit","console","log","window","location","target","value"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './Login.css';\r\n\r\n// Define a static list of users and passwords\r\nconst users = [\r\n   \r\n    { username: 'Admin1', password: 'password1' },\r\n    { username: 'Admin2', password: 'password2' },\r\n    { username: 'Admin3', password: 'password3' },\r\n];\r\nexport function Login() {\r\n    const name=props.name\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    function handleLogin(event) {\r\n        event.preventDefault();\r\n        // Prevent the default form submission  \r\n        // Look for a user with the entered username and password \r\n        const user = users.find(u => u.username === username && u.password === password);\r\n        if (user) {\r\nprops.onSubmit(user.username)\r\n            // If a user was found, log them in   \r\n            console.log('User logged in:', user.username);\r\n            setError('');\r\n            window.location = '/home'; // Clear any previous error messages    \r\n        } else {\r\n\r\n            // If no user was found, display an error message     \r\n            console.log('Login failed');\r\n            setError('Invalid username or password');\r\n        }\r\n    } return (\r\n        <div className=\"login-container\">\r\n            <form onSubmit={handleLogin} className=\"login-form\">\r\n\r\n                <h2 className=\"login-title\">Login</h2>\r\n                <label className=\"login-label\">\r\n                    <span className=\"login-label-text\">Username:</span>\r\n                    <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)}\r\n                        className=\"login-input\" />\r\n                </label>\r\n                <label className=\"login-label\">\r\n                    <span className=\"login-label-text\">Password:</span>\r\n                    <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)}\r\n                        className=\"login-input\" />\r\n                </label>\r\n                <button type=\"submit\" className=\"login-button\">Log In</button>\r\n                {error && <div className=\"login-error\">{error}</div>}\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}