{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Coding Master Project\\\\React Coding Master Website\\\\src\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.css'; // Define a static list of users and passwords\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst users = [{\n  username: 'user1',\n  password: 'password1'\n}, {\n  username: 'user2',\n  password: 'password2'\n}, {\n  username: 'user3',\n  password: 'password3'\n}];\nexport function Login() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  function handleLogin(event) {\n    event.preventDefault(); // Prevent the default form submission  \n    // Look for a user with the entered username and password \n\n    const user = users.find(u => u.username === username && u.password === password);\n\n    if (user) {\n      // If a user was found, log them in   \n      console.log('User logged in:', user.username);\n      setError(''); // Clear any previous error messages    \n    } else {\n      // If no user was found, display an error message     \n      console.log('Login failed');\n      setError('Invalid username or password');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login-label-text\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: event => setUsername(event.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login-label-text\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 22\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 22\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \", error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 40\n      }, this), \"\\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), \"\\xA0 \\xA0 \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n}\n\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/React Coding Master Project/React Coding Master Website/src/Login/Login.js"],"names":["React","useState","users","username","password","Login","setUsername","setPassword","error","setError","handleLogin","event","preventDefault","user","find","u","console","log","target","value"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './Login.css'\r\n// Define a static list of users and passwords\r\nconst \r\nusers = [ { username: 'user1', password: 'password1' },\r\n { username: 'user2', password: 'password2' },\r\n{ username: 'user3', password: 'password3' },];\r\nexport function Login() \r\n{const [username, setUsername] = useState('');\r\nconst [password, setPassword] = useState('');  const [error, setError] = useState('');\r\nfunction handleLogin(event)\r\n { event.preventDefault();\r\n     // Prevent the default form submission  \r\n // Look for a user with the entered username and password \r\n      const user = users.find(u => u.username === username && u.password === password); \r\n     if (user) {\r\n    \r\n        // If a user was found, log them in   \r\n         console.log('User logged in:', user.username);\r\n         setError(''); // Clear any previous error messages    \r\n        } else {\r\n            \r\n            // If no user was found, display an error message     \r\n             console.log('Login failed');\r\n              setError('Invalid username or password');\r\n           }}return ( <div className=\"login-container\">\r\n            <form onSubmit={handleLogin} className=\"login-form\">\r\n              \r\n                <h2 className=\"login-title\">Login</h2>\r\n                <label className=\"login-label\">\r\n                  <span className=\"login-label-text\">Username:</span>\r\n            <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)}\r\n                     className=\"login-input\" /> </label>\r\n                     <label className=\"login-label\">\r\n                     <span className=\"login-label-text\">Password:</span>\r\n                     <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} \r\n                     className=\"login-input\" /> </label>\r\n                     <button type=\"submit\" className=\"login-button\">Log In</button>\r\n                             {error && <div className=\"login-error\">{error}</div>}\r\n                           </form>    </div> );}"]},"metadata":{},"sourceType":"module"}